
@model Sharp.CMS.ViewModels.MediaAssets.AlbumViewModel
@{
    ViewBag.PageName = "Album";
}

<div class="col-md-12">
    <div class="card">
        <form asp-controller="Album" autocomplete="off" asp-antiforgery="true" id="newform" enctype="multipart/form-data" asp-action="Create" method="post">
            <input asp-for="AlbumId" type="hidden" />
            <div class="card-header">
                <h3 class="card-title">Add New Album</h3>
            </div>
            <div class="card-body register-card-body">
                <div class="col-md-12">
                    <div class="text-danger" asp-validation-summary="ModelOnly"></div>
                    <div class="form-row">
                        <div class="form-group col-md-3">
                            <label class="mandatory" asp-for="MediaTypeId"></label>
                            <select asp-for="MediaTypeId" class="form-control"
                                    asp-items="@(new SelectList(Model.ListofMediaType, "Value", "Text"))">
                            </select>
                            <span class="text-danger" asp-validation-for="MediaTypeId"></span>

                        </div>

                        <div class="form-group col-md-3">
                            <label class="mandatory" asp-for="Album"></label>
                            <input asp-for="Album" placeholder="Enter Album Folder Name" class="form-control" />
                            <span class="text-danger" asp-validation-for="Album"></span>


                        </div>
                        <div class="form-group col-md-3">
                            <label class="mandatory" asp-for="AlbumName"></label>
                            <input asp-for="AlbumName" placeholder="Enter Album Name" class="form-control" />
                            <span class="text-danger" asp-validation-for="AlbumName"></span>
                        </div>

                        <div class="form-group col-md-3">
                            <label class="mandatory" asp-for="AlbumNameLL"></label>
                            <input asp-for="AlbumNameLL" placeholder="Enter Album Name" class="form-control" />
                            <span class="text-danger" asp-validation-for="AlbumNameLL"></span>
                        </div>

                       

                        <div class="form-group col-md-3">
                            <label class="mandatory">Upload Thumbnail</label>
                            <input type="file" class="form-control" name="Thumbnail" id="Thumbnail" />
                        </div>
                        <div class="form-group col-md-3">
                            <div class="form-check">
                                <input type="checkbox" asp-for="IsActive" class="form-check-input" />
                                <label class="form-check-label" asp-for="IsActive">Active</label>
                                <span class="text-danger" asp-validation-for="IsActive"></span>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
            <div class="card-footer">
                <button type="button" id="btnAddAlbum" class="btn btn-success">Add Album</button>
                <button type="button" id="btnUpdateAlbum" class="btn btn-success">Update Album</button>

                <a asp-area="Administration" class="btn btn-danger" asp-controller="Album" asp-action="Create">Clear</a>

            </div>

        </form>
    </div>
</div>

<hr />

<div class="col-md-12">
    <div class="card card-default">

        <div class="card-body">
            <table id="CustomDataTable" class="table table-bordered table-hover">
                <thead>
                    <tr>
                        <th>AlbumId</th>
                        <th>AlbumName</th>
                        <th>Path</th>
                        <th>Status</th>
                        <th>Edit</th>
                        <th>Delete</th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>


@await Html.PartialAsync("~/Views/Shared/_DatatablesScripts.cshtml")
@Html.Hidden("item-to-delete", "", new { @id = "item-to-delete" })

@section scripts{
    <script>
        $(document).ready(function () {

            $("#btnUpdateAlbum").hide();
            $("#btnAddAlbum").show();


            $('#CustomDataTable').DataTable({
                "processing": true,
                "serverSide": true,
                "order": [[0, "desc"]],
                "filter": true,
                "ajax": {
                    "url": "/Administration/Album/GridAllAlbums",
                    "type": "POST",
                    "datatype": "json"
                },
                "columnDefs": [
                    {
                        "targets": [0],
                        "visible": false,
                        "searchable": false
                    },
                    {
                        "targets": [1],
                        "orderable": false,
                        "searchable": false
                    },
                    {
                        "targets": [2],
                        "orderable": false,
                        "searchable": false
                    },
                    {
                        "targets": [3],
                        "orderable": false,
                        "searchable": false
                    },
                    {
                        "targets": [4],
                        "orderable": false,
                        "searchable": false
                    },
                    {
                        "targets": [5],
                        "orderable": false,
                        "searchable": false
                    }



                ],
                "columns": [
                    { "data": "AlbumId", "name": "AlbumId", "autoWidth": true },
                    { "data": "AlbumName", "name": "AlbumName", "autoWidth": true },
                    { "data": "AlbumImagePath", "name": "AlbumImagePath", "autoWidth": true },
                    { "data": "IsActive", "name": "IsActive", "autoWidth": true },
                    {
                        "render": function (data, type, full, meta) {
                            return ' <button type="button" class="btn btn-primary btn-sm" onclick="Edit(' + full.AlbumId + ');"> Edit </button>';
                        }
                    },
                    {
                        "render": function (data, type, full, meta) {
                            return ' <button type="button" class="btn btn-danger btn-sm" onclick="Delete(' + full.AlbumId + ');"> Delete </button>';
                        }
                    }

                ]
            });



        });

        function Delete(InnerPageWidgetId) {
            $.confirm({
                title: 'Delete!',
                nt: 'Do you want to Deactivate Widget!',
                buttons: {
                    confirm: function () {
                        $.ajax({
                            url: "/Administration/InnerWidgets/Deactivate",
                            type: "POST",
                            data: { Id: InnerPageWidgetId },
                            success: function (data, textStatus, xhr) {
                                if (data.Result == "success") {
                                    location.reload();
                                }
                                if (data.Result == "failed") {
                                    $.alert('Something Went Wrong');
                                }
                            },
                            error: function (xhr, status, err) {
                                if (xhr.status == 401) {
                                    alert('Error');
                                    window.location.href = "/Portal/Logout";
                                }
                                if (xhr.status == 500) {
                                    alert('Error');
                                    window.location.href = "/Portal/Logout";
                                }
                            }
                        });
                    },
                    cancel: function () {
                        $.alert('Canceled!');
                    }
                }
            });
        }

        function Edit(albumId) {
            $.ajax({
                url: "/Administration/Album/GetAlbumbyId",
                type: "POST",
                data: { albumId: albumId },
                success: function (data, textStatus, xhr) {
                    if (data.AlbumId == "") {
                        $.alert('Something Went Wrong');
                    }

                    $("#MediaTypeId").prop('disabled', 'disabled');

                    $("#btnUpdateAlbum").show();
                    $("#btnAddAlbum").hide();

                    $("#AlbumName").val(data.AlbumName);
                    $("#AlbumNameLL").val(data.AlbumNameLL);
                    $("#MediaTypeId").val(data.MediaTypeId);
                    $("#AlbumId").val(data.AlbumId);
                    $("#Album").val(data.Album);

                    if (data.IsActive == '1') {
                        $("#IsActive").prop('checked', true);
                    } else {
                        $("#IsActive").prop('checked', false);
                    }
                },
                error: function (xhr, status, err) {
                    if (xhr.status == 401) {
                        alert('Error');
                        window.location.href = "/Portal/Logout";
                    }
                    if (xhr.status == 500) {
                        alert('Error');
                        window.location.href = "/Portal/Logout";
                    }
                }
            });
        }


        function SetDefaultWidget(pageWidgetId) {
            $.confirm({
                title: 'Alert !',
                content: 'Do you want to Set Default Inner Widget!',
                buttons: {
                    confirm: function () {
                        $.ajax({
                            url: "/Administration/InnerWidgets/SetDefaultWidget",
                            type: "POST",
                            data: { Id: pageWidgetId },
                            success: function (data, textStatus, xhr) {
                                if (data.Result == "success") {
                                    location.reload();
                                }
                                if (data.Result == "failed") {
                                    $.alert('Something Went Wrong');
                                }
                            },
                            error: function (xhr, status, err) {
                                if (xhr.status == 401) {
                                    alert('Error');
                                    window.location.href = "/Portal/Logout";
                                }
                                if (xhr.status == 500) {
                                    alert('Error');
                                    window.location.href = "/Portal/Logout";
                                }
                            }
                        });
                    },
                    cancel: function () {
                        $.alert('Canceled!');
                    }
                }
            });
        }

    </script>


}


<script>
    $(document).ready(function () {
        $("#btnAddAlbum").click(function () {
            if ($("#MediaTypeId").val() == "") {
                $("#loader").hide();
                $.alert({
                    title: 'Validation!',
                    content: 'Select MediaType',
                    type: 'red'
                });

            }
            else if ($("#Album").val() == "") {
                $("#loader").hide();
                $.alert({
                    title: 'Validation!',
                    content: 'Enter Album Folder Name',
                    type: 'red'
                });

            }
            else if ($("#AlbumName").val() == "") {
                $("#loader").hide();
                $.alert({
                    title: 'Validation!',
                    content: 'Enter Album Name',
                    type: 'red'
                });
            }
            else if ($("#AlbumNameLL").val() == "") {
                $("#loader").hide();
                $.alert({
                    title: 'Validation!',
                    content: 'Enter Album Name in Other',
                    type: 'red'
                });

            }
            else {

                var formData = new FormData();
                formData.append("AlbumName", $("#AlbumName").val());
                formData.append("AlbumNameLL", $("#AlbumNameLL").val());
                formData.append("IsActive", $("input:checkbox:checked").val());
                formData.append("Album", $("#Album").val());
                formData.append("MediaTypeId", $("#MediaTypeId").val());

                var files = $("#Thumbnail").get(0).files;

                for (var i = 0; i < files.length; i++) {
                    formData.append("Files", files[i]);
                }


                $("#loader").show();

                $.ajax({
                    type: "POST",
                    url: "/Administration/Album/Create",
                    data: formData,
                    processData: false,
                    contentType: false,

                    success: function (data, textStatus, xhr)
                    {
                        if (data.Result == "success")
                        {
                            window.location.reload();
                        }

                        if (data.Result == "errorMessage")
                        {
                            $.alert({
                                title: 'Validation!',
                                content: data.Message,
                                type: 'red'
                            });
                        }
                        if (data.Result == "failed")
                        {
                            $.alert({
                                title: 'Validation!',
                                content: 'Something Went Wrong',
                                type: 'red'
                            });
                        }
                        


                    },
                    error: function (xhr, status, err) {
                        if (xhr.status == 400) {
                            DisplayModelStateErrors(xhr.responseJSON.ModelState);
                        }
                    }
                });

            }

        });


        $("#btnUpdateAlbum").click(function ()
        {
            if ($("#MediaTypeId").val() == "") {
                $("#loader").hide();
                $.alert({
                    title: 'Validation!',
                    content: 'Select MediaType',
                    type: 'red'
                });

            }
            else if ($("#Album").val() == "") {
                $("#loader").hide();
                $.alert({
                    title: 'Validation!',
                    content: 'Enter Album Folder Name',
                    type: 'red'
                });

            }
            else if ($("#AlbumName").val() == "") {
                $("#loader").hide();
                $.alert({
                    title: 'Validation!',
                    content: 'Enter Album Name',
                    type: 'red'
                });
            }
            else if ($("#AlbumNameLL").val() == "")
            {
                $("#loader").hide();
                $.alert({
                    title: 'Validation!',
                    content: 'Enter Album Name in Other',
                    type: 'red'
                });

            }
            else if ($("#AlbumId").val() == "") {
                $("#loader").hide();
                $.alert({
                    title: 'Validation!',
                    content: 'Something Went Wrong. Reload Page and try again.',
                    type: 'red'
                });

            }
            else {


                var jsonObject =
                {
                    AlbumName: $("#AlbumName").val(),
                    AlbumNameLL: $("#AlbumNameLL").val(),
                    IsActive: $("input:checkbox:checked").val(),
                    Album: $("#Album").val(),
                    MediaTypeId: $("#MediaTypeId").val(),
                    AlbumId: $("#AlbumId").val()
                };

                $("#loader").show();

                $.ajax({
                    type: "POST",
                    url: "/Administration/Album/Edit",
                    data: jsonObject,

                    success: function (data, textStatus, xhr) {
                        if (data.Result == "success")
                        {
                            window.location.reload();
                        }
                        if (data.Result == "errorMessage")
                        {
                            $.alert({
                                title: 'Validation!',
                                content: data.Message,
                                type: 'red'
                            });
                        }
                        if (data.Result == "failed")
                        {
                            $.alert({
                                title: 'Validation!',
                                content: 'Something Went Wrong',
                                type: 'red'
                            });
                        }
                    },
                    error: function (xhr, status, err) {
                        if (xhr.status == 400) {
                            DisplayModelStateErrors(xhr.responseJSON.ModelState);
                        }
                    }
                });

            }

        });



    });
    function DisplayModelStateErrors(modelState) {
        var message = "";
        var propStrings = Object.keys(modelState);

        $.each(propStrings, function (i, propString) {
            var propErrors = modelState[propString];
            $.each(propErrors, function (j, propError) {
                message += propError;
            });
            message += "\n";
        });

        alert(message);
    };
</script>